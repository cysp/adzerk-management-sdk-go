// Code generated by ogen, DO NOT EDIT.

package client

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// CreateAdType implements createAdType operation.
	//
	// POST /v1/adtypes
	CreateAdType(ctx context.Context, req OptCreateAdTypeReq) (*AdType, error)
	// CreateChannel implements createChannel operation.
	//
	// POST /v1/channel
	CreateChannel(ctx context.Context, req OptCreateChannelReq) (*Channel, error)
	// CreateChannelSiteMap implements createChannelSiteMap operation.
	//
	// POST /v1/channelSite
	CreateChannelSiteMap(ctx context.Context, req OptCreateChannelSiteMapReq) (*ChannelSiteMap, error)
	// CreateForChannelAdType implements createForChannelAdType operation.
	//
	// POST /v1/channel/{channelId}/adtypes
	CreateForChannelAdType(ctx context.Context, req OptCreateForChannelAdTypeReq, params CreateForChannelAdTypeParams) (*AdType, error)
	// CreateSite implements createSite operation.
	//
	// POST /v1/site
	CreateSite(ctx context.Context, req OptCreateSiteReq) (*Site, error)
	// CreateZone implements createZone operation.
	//
	// POST /v1/zone
	CreateZone(ctx context.Context, req OptCreateZoneReq) (*Zone, error)
	// DeleteAdType implements deleteAdType operation.
	//
	// GET /v1/adtypes/{id}/delete
	DeleteAdType(ctx context.Context, params DeleteAdTypeParams) error
	// DeleteChannel implements deleteChannel operation.
	//
	// GET /v1/channel/{id}/delete
	DeleteChannel(ctx context.Context, params DeleteChannelParams) error
	// DeleteChannelSiteMap implements deleteChannelSiteMap operation.
	//
	// GET /v1/channel/{channelId}/site/{siteId}/delete
	DeleteChannelSiteMap(ctx context.Context, params DeleteChannelSiteMapParams) error
	// DeleteForChannelAdType implements deleteForChannelAdType operation.
	//
	// GET /v1/channel/{channelId}/adtypes/{id}/delete
	DeleteForChannelAdType(ctx context.Context, params DeleteForChannelAdTypeParams) error
	// FilterSite implements filterSite operation.
	//
	// GET /v1/fast/site
	FilterSite(ctx context.Context, params FilterSiteParams) (FilterSiteOK, error)
	// GetChannel implements getChannel operation.
	//
	// GET /v1/channel/{id}
	GetChannel(ctx context.Context, params GetChannelParams) (*Channel, error)
	// GetChannelSiteMap implements getChannelSiteMap operation.
	//
	// GET /v1/channel/{channelId}/site/{siteId}
	GetChannelSiteMap(ctx context.Context, params GetChannelSiteMapParams) (*ChannelSiteMap, error)
	// GetPrioritiesChannel implements getPrioritiesChannel operation.
	//
	// GET /v1/channel/{id}/priorities
	GetPrioritiesChannel(ctx context.Context, params GetPrioritiesChannelParams) ([]Priority, error)
	// GetSite implements getSite operation.
	//
	// GET /v1/site/{id}
	GetSite(ctx context.Context, params GetSiteParams) (*Site, error)
	// GetZone implements getZone operation.
	//
	// GET /v1/zone/{id}
	GetZone(ctx context.Context, params GetZoneParams) (*Zone, error)
	// ListAdTypes implements listAdTypes operation.
	//
	// GET /v1/adtypes
	ListAdTypes(ctx context.Context, params ListAdTypesParams) (*AdTypeList, error)
	// ListChannelSiteMaps implements listChannelSiteMaps operation.
	//
	// GET /v1/channelSite
	ListChannelSiteMaps(ctx context.Context, params ListChannelSiteMapsParams) (*ChannelSiteMapList, error)
	// ListChannels implements listChannels operation.
	//
	// GET /v1/channel
	ListChannels(ctx context.Context, params ListChannelsParams) (*ChannelList, error)
	// ListChannelsForSiteChannelSiteMap implements listChannelsForSiteChannelSiteMap operation.
	//
	// GET /v1/channelsInSite/{siteId}
	ListChannelsForSiteChannelSiteMap(ctx context.Context, params ListChannelsForSiteChannelSiteMapParams) (*ChannelList, error)
	// ListForChannelAdType implements listForChannelAdType operation.
	//
	// GET /v1/channel/{channelId}/adtypes
	ListForChannelAdType(ctx context.Context, params ListForChannelAdTypeParams) (*AdTypeList, error)
	// ListSites implements listSites operation.
	//
	// GET /v1/site
	ListSites(ctx context.Context, params ListSitesParams) (*SiteList, error)
	// ListZones implements listZones operation.
	//
	// GET /v1/zone
	ListZones(ctx context.Context, params ListZonesParams) (*ZoneList, error)
	// UpdateChannel implements updateChannel operation.
	//
	// PUT /v1/channel/{id}
	UpdateChannel(ctx context.Context, req OptUpdateChannelReq, params UpdateChannelParams) (*Channel, error)
	// UpdateChannelSiteMap implements updateChannelSiteMap operation.
	//
	// PUT /v1/channelSite
	UpdateChannelSiteMap(ctx context.Context, req OptUpdateChannelSiteMapReq) (*ChannelSiteMap, error)
	// UpdateSite implements updateSite operation.
	//
	// PUT /v1/site/{id}
	UpdateSite(ctx context.Context, req OptUpdateSiteReq, params UpdateSiteParams) (*Site, error)
	// UpdateZone implements updateZone operation.
	//
	// PUT /v1/zone/{id}
	UpdateZone(ctx context.Context, req OptUpdateZoneReq, params UpdateZoneParams) (*Zone, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	sec SecurityHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, sec SecurityHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		sec:        sec,
		baseServer: s,
	}, nil
}
